"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.KubeConfig = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class KubeConfig extends pulumi.ComponentResource {
    /**
     * Returns true if the given object is an instance of KubeConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubeConfig.__pulumiType;
    }
    /**
     * Create a KubeConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["kubeconfig"] = undefined /*out*/;
        }
        else {
            resourceInputs["kubeconfig"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubeConfig.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}
exports.KubeConfig = KubeConfig;
/** @internal */
KubeConfig.__pulumiType = 'aws-k8s:index:KubeConfig';
//# sourceMappingURL=kubeConfig.js.map