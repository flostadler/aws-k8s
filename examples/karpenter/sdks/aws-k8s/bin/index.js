"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.types = exports.Provider = exports.KubeConfig = exports.Karpenter = exports.IrsaRole = exports.Cluster = exports.BuildkitCerts = exports.BuildkitBuilder = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.BuildkitBuilder = null;
utilities.lazyLoad(exports, ["BuildkitBuilder"], () => require("./buildkitBuilder"));
exports.BuildkitCerts = null;
utilities.lazyLoad(exports, ["BuildkitCerts"], () => require("./buildkitCerts"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.IrsaRole = null;
utilities.lazyLoad(exports, ["IrsaRole"], () => require("./irsaRole"));
exports.Karpenter = null;
utilities.lazyLoad(exports, ["Karpenter"], () => require("./karpenter"));
exports.KubeConfig = null;
utilities.lazyLoad(exports, ["KubeConfig"], () => require("./kubeConfig"));
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
// Export sub-modules:
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-k8s:index:BuildkitBuilder":
                return new exports.BuildkitBuilder(name, undefined, { urn });
            case "aws-k8s:index:BuildkitCerts":
                return new exports.BuildkitCerts(name, undefined, { urn });
            case "aws-k8s:index:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws-k8s:index:IrsaRole":
                return new exports.IrsaRole(name, undefined, { urn });
            case "aws-k8s:index:Karpenter":
                return new exports.Karpenter(name, undefined, { urn });
            case "aws-k8s:index:KubeConfig":
                return new exports.KubeConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-k8s", "index", _module);
pulumi.runtime.registerResourcePackage("aws-k8s", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:aws-k8s") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map