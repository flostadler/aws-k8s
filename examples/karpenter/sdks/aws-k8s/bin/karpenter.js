"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Karpenter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class Karpenter extends pulumi.ComponentResource {
    /**
     * Returns true if the given object is an instance of Karpenter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Karpenter.__pulumiType;
    }
    /**
     * Create a Karpenter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["controllerRoleArgs"] = args ? args.controllerRoleArgs : undefined;
            resourceInputs["controllerRoleArn"] = args ? args.controllerRoleArn : undefined;
            resourceInputs["createAccessEntry"] = args ? args.createAccessEntry : undefined;
            resourceInputs["helmValues"] = args ? args.helmValues : undefined;
            resourceInputs["kubeconfig"] = args ? args.kubeconfig : undefined;
            resourceInputs["nodeRoleArgs"] = args ? args.nodeRoleArgs : undefined;
            resourceInputs["nodeRoleArn"] = args ? args.nodeRoleArn : undefined;
            resourceInputs["queue"] = args ? args.queue : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["controllerRoleName"] = undefined /*out*/;
            resourceInputs["nodeRoleName"] = undefined /*out*/;
            resourceInputs["queueArn"] = undefined /*out*/;
        }
        else {
            resourceInputs["controllerRoleName"] = undefined /*out*/;
            resourceInputs["nodeRoleName"] = undefined /*out*/;
            resourceInputs["queueArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Karpenter.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}
exports.Karpenter = Karpenter;
/** @internal */
Karpenter.__pulumiType = 'aws-k8s:index:Karpenter';
//# sourceMappingURL=karpenter.js.map