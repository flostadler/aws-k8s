// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BuildkitCerts extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'aws-k8s:index:BuildkitCerts';

    /**
     * Returns true if the given object is an instance of BuildkitCerts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuildkitCerts {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuildkitCerts.__pulumiType;
    }

    public /*out*/ readonly caCertPem!: pulumi.Output<string>;
    public /*out*/ readonly caCertPublicKeyPem!: pulumi.Output<string>;
    public /*out*/ readonly clientCertPem!: pulumi.Output<string>;
    public /*out*/ readonly clientPrivateKeyPem!: pulumi.Output<string>;
    public /*out*/ readonly serverCertPem!: pulumi.Output<string>;
    public /*out*/ readonly serverPrivateKeyPem!: pulumi.Output<string>;

    /**
     * Create a BuildkitCerts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BuildkitCertsArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["caSubject"] = args ? args.caSubject : undefined;
            resourceInputs["keyAlgorithm"] = args ? args.keyAlgorithm : undefined;
            resourceInputs["serverDNSNames"] = args ? args.serverDNSNames : undefined;
            resourceInputs["serverIPAddresses"] = args ? args.serverIPAddresses : undefined;
            resourceInputs["caCertPem"] = undefined /*out*/;
            resourceInputs["caCertPublicKeyPem"] = undefined /*out*/;
            resourceInputs["clientCertPem"] = undefined /*out*/;
            resourceInputs["clientPrivateKeyPem"] = undefined /*out*/;
            resourceInputs["serverCertPem"] = undefined /*out*/;
            resourceInputs["serverPrivateKeyPem"] = undefined /*out*/;
        } else {
            resourceInputs["caCertPem"] = undefined /*out*/;
            resourceInputs["caCertPublicKeyPem"] = undefined /*out*/;
            resourceInputs["clientCertPem"] = undefined /*out*/;
            resourceInputs["clientPrivateKeyPem"] = undefined /*out*/;
            resourceInputs["serverCertPem"] = undefined /*out*/;
            resourceInputs["serverPrivateKeyPem"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuildkitCerts.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a BuildkitCerts resource.
 */
export interface BuildkitCertsArgs {
    caSubject?: pulumi.Input<inputs.SelfSignedCertSubjectArgs>;
    keyAlgorithm?: pulumi.Input<string>;
    serverDNSNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverIPAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}
